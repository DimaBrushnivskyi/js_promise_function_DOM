{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","nodeName","id","then","printMessage","message","div","document","createElement","className","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAoBJ,GAAAA,OAAAA,GAAa,WACvCE,EAAkBF,UAAAA,OAAAA,EACdD,8BAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GADrC,UAGDC,KAAK,SAAAL,GAAWA,OAAAA,IAGrB,IAAMM,EAAe,SAACC,GACdC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,UAAY,UAChBH,EAAII,YAAcL,EAClBE,SAASI,KAAKC,OAAON,IAGvBO,OAAOC,QAAU,CACfpB,QAAAA,EACAU,aAAAA","file":"main.f8823427.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(`${eventName}`, () => {\n      resolve(`It was ${eventName} on the element:\n        ${element.nodeName}, id: ${element.id}.`);\n    });\n  }).then(resolve => resolve);\n}\n\nconst printMessage = (message) => {\n  const div = document.createElement('div');\n\n  div.className = 'message';\n  div.textContent = message;\n  document.body.append(div);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}